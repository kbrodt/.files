# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod+SHIFT, Return, exec, foot
bind = $mainMod+SHIFT, c, killactive,
bind = $mainMod+SHIFT, q, exit,
bind = $mainMod, e, exec, dolphin
bind = $mainMod, f, togglefloating,
bind = $mainMod, p , exec, wofi --show drun
bind = $mainMod, i, pseudo, # dwindle
bind = $mainMod, d, togglesplit, # dwindle
bind = $mainMod, m, fullscreen,

# Move focus with mainMod + arrow keys
binde = $mainMod, h, movefocus, l
binde = $mainMod, l, movefocus, r
binde = $mainMod, k, movefocus, u
binde = $mainMod, j, movefocus, d

binde = $mainMod+SHIFT, h, resizeactive, -20 0
binde = $mainMod+SHIFT, l, resizeactive, 20 0
binde = $mainMod+SHIFT, k, resizeactive, 0 -20
binde = $mainMod+SHIFT, j, resizeactive, 0 20

binde = $mainMod+CONTROL, h, movewindow, l
binde = $mainMod+CONTROL, l, movewindow, r
binde = $mainMod+CONTROL, k, movewindow, u
binde = $mainMod+CONTROL, j, movewindow, d

bind = $mainMod, Return, swapnext, previous

binde = $mainMod+CONTROL, h, moveactive, -20 0
binde = $mainMod+CONTROL, l, moveactive, 20 0
binde = $mainMod+CONTROL, k, moveactive, 0 -20
binde = $mainMod+CONTROL, j, moveactive, 0 20

bind = $mainMod, code:59, focusmonitor, l
bind = $mainMod, code:60, focusmonitor, r
bind = $mainMod+SHIFT, code:59, movecurrentworkspacetomonitor, l
bind = $mainMod+SHIFT, code:60, movecurrentworkspacetomonitor, r
bind = $mainMod+CONTROL, code:59, movewindow, mon:l
bind = $mainMod+CONTROL, code:60, movewindow, mon:r

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 2, workspace, 1
bind = $mainMod, 3, workspace, 2
bind = $mainMod, 4, workspace, 3
bind = $mainMod, 5, workspace, 4
bind = $mainMod, 7, workspace, 1
bind = $mainMod, 8, workspace, 2
bind = $mainMod, 9, workspace, 3
bind = $mainMod, 0, workspace, 4

bind = $mainMod, Tab, workspace, previous

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod+SHIFT, 2, movetoworkspace, 1
bind = $mainMod+SHIFT, 3, movetoworkspace, 2
bind = $mainMod+SHIFT, 4, movetoworkspace, 3
bind = $mainMod+SHIFT, 5, movetoworkspace, 4
bind = $mainMod+SHIFT, 7, movetoworkspace, 1
bind = $mainMod+SHIFT, 8, movetoworkspace, 2
bind = $mainMod+SHIFT, 9, movetoworkspace, 3
bind = $mainMod+SHIFT, 0, movetoworkspace, 4

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# trigger when the switch is turning on
#bindl=,switch:on:[switch name],exec,hyprctl keyword monitor "eDP-1, 2560x1600, 0x0, 1"
# trigger when the switch is turning off
#bindl=,switch:off:[switch name],exec,hyprctl keyword monitor "eDP-1, disable"

# Webbrowser/Discord
bind = $mainMod, w, exec, [workspace 3 silent] qutebrowser
bind = $mainMod, c, exec, [workspace 2 silent] discord

# Mute microphone
#bind = $mainMod, F7, exec, \
#    amixer set Capture toggle | tail -n1 | grep -q "\[on\]" ;\
#    ( \
#        [ $? -eq 0 ] \
#        && dunstify \
#            -a "ignore" \
#            -h string:x-dunst-stack-tag:volume \
#            -t 2000 \
#            "mic unmuted" \
#    ) || dunstify \
#        -a "ignore" \
#        -h string:x-dunst-stack-tag:volume \
#        -t 2000 \
#        "mic muted"

## Mute volume
#{super + F8, XF86AudioMute}
#    amixer set Master toggle | tail -n1 | grep -q "\[on\]" ;\
#    ( \
#        [ $? -eq 0 ] \
#        && dunstify \
#            -a "ignore" \
#            -h string:x-dunst-stack-tag:volume \
#            -t 2000 \
#            "volume unmuted" \
#    ) || dunstify \
#            -a "ignore" \
#            -h string:x-dunst-stack-tag:volume \
#            -t 2000 \
#            "volume muted"

# Decrease/Increase volume
binde = $mainMod, F9, exec, changevolume -
binde = $mainMod, F10, exec, changevolume +
binde = , XF86AudioLowerVolume, exec, changevolume -
binde = , XF86AudioRaiseVolume, exec, changevolume +

## Play mpv music
#super + shift + F11
#    ps aux | grep '[m]pv' | grep -q '[-]-no-video'; \
#    a=$?; \
#    [ $a -eq 1 ] && mpv -\-shuffle -\-no-video $(find $HOME/music -maxdepth 1 -type d | sort | dmenu -p "Choose music:" -l 20) > /dev/null 2>&1; \
#    [ $a -eq 0 ] \
#        && (\
#            m=$(find $HOME/music -maxdepth 1 -type d | sort | dmenu -p "Choose music:" -l 20); \
#            [ $? -eq 0 ] && kill -9 $(ps aux | grep "[m]pv" | grep -v "[g]rep" | grep "[-]-no-video" | awk '\{print $2\}') && mpv -\-shuffle -\-no-video $m > /dev/null 2>&1 \
#        )
#
## Kill mpv music
#super + ctrl + F11
#    kill -9 $(ps aux | grep "[m]pv" | grep -v "[g]rep" | grep "[-]-no-video" | awk '\{print $2\}'); \
#    [ $? -eq 0 ] && (dunstify -a "ignore" "player killed")

# Play/pause audio
bind = , XF86AudioPlay, exec, playerctl -a play-pause
bind = $mainMod, F11, exec, playerctl -a play-pause

## Prev/next audio
bind = , XF86AudioPrev, exec, playerctl -a previous
bind = , XF86AudioNext, exec, playerctl -a next
bind = $mainMod+SHIFT, F12, exec, playerctl -a previous
bind = $mainMod, F12, exec, playerctl -a next

## Position +/- audio
bind = $mainMod+SHIFT, F9, exec, playerctl -a position 10-
bind = $mainMod+SHIFT, F10, exec, playerctl -a position 10+
bind = , XF86AudioLowerVolume, exec, playerctl -a position 10-
bind = , XF86AudioRaiseVolume, exec, playerctl -a position 10+

# Screenshot
bind = $mainMod, s, exec, import png:- | tee ~/pix/ss/$(date +%s).png | wl-copy -t image/png
#super + ctrl + s
#    import -window "$(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/\{print $NF\}')" png:- \
#        | tee ~/pix/ss/$(date +%s).png \
#        | xclip -sel cb -t image/png \
#        | :
#super + shift + s
#    import -window root png:- | tee ~/pix/ss/$(date +%s).png | xclip -sel cb -t image/png

## Translate
#super + e
#    trans -b :ru "$(xclip -o)" \
#        | xclip -sel cb -i -f \
#        | fold -w 240 -s \
#        | dmenu -b -fn "monospace:size=16" -l 25 \
#        | :
#
#super + shift + e
#    echo "en fr es" \
#        | xargs -n 1 \
#        | dmenu -p "Choose language" \
#        | xargs -I lang trans -b ru:lang "$(xclip -o)" \
#        | xclip -sel cb -i -f \
#        | fold -w 240 -s \
#        | dmenu -b -fn "monospace:size=16" -l 25 \
#        | :


# dunstctl commands
bind = CONTROL, grave, exec, dunstctl history-pop
bind = CONTROL, space, exec, dunstctl close
bind = CONTROL+SHIFT, space, exec, dunstctl close-all
bind = CONTROL, period, exec, dunstctl context
